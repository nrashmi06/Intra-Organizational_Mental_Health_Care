services:
  db:
    image: postgres:17.0
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      BASE_URL: ${BASE_URL}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLOUDINARY_URL: ${CLOUDINARY_URL}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE}
      FILE_SIZE_THRESHOLD: ${FILE_SIZE_THRESHOLD}
      CONTEXT_PATH: ${CONTEXT_PATH}
      SPRING_LOG_LEVEL: ${SPRING_LOG_LEVEL}
      SCHEDULER_USER_ACTIVITY_CLEANUP_INTERVAL: ${SCHEDULER_USER_ACTIVITY_CLEANUP_INTERVAL}
    ports:
      - "${APP_PORT:-8080}:8080"
    volumes:
      - ./target:/app/target
    command: >
      sh -c "java -jar /app/target/your-app.jar"
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge